neofetch
# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

bindkey -v

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"
plugins=(git vi-mode archlinux zsh-syntax-highlighting zsh-autosuggestions zsh-z)
source $ZSH/oh-my-zsh.sh

# Path to cargo installation.
export PATH="$PATH:$HOME/.cargo/bin"

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
export EDITOR='nvim'

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias ls='exa -al --icons --color=always --group-directories-first' # my preferred listing
alias la='exa -a --icons --color=always --group-directories-first'  # all files and dirs
alias ll='exa -l --icons --color=always --group-directories-first'  # long format
alias lt='exa -aT --icons --color=always --group-directories-first' # tree listing
alias l.='exa -a --icons | egrep "^\."'

# Git aliases
alias gg="git status"                                       # gg:          show the state of the working dir
alias gp="git pull"                                         # gp:          download and integrate remote changes
alias gd="git diff"                                         # gd:          show changes between commits, commit and working tree
alias gl="git log"                                          # gl: 
alias gco="git checkout"                                    # gco:
alias gba="git branch"                                      # gba:
alias ginit="git init"                                      # ginit:       create an empty git repository or reinitialize an existing one
alias git-branches='git branch -va'                         # git-branches: show all the branches(individual projects withian a git repository)
alias gco-master='git checkout master'                      # change to master branch
alias gl-fancy='git log --oneline --decorate --all --graph' # git log fancy
alias bat="bat --style=auto" # Bat Aliases improved cat
alias c="clear" # Clear command shortcut
alias q="exit" # Quit command shotcut
alias v="nvim" # Quick Access
alias s="fd --type f --hidden --exclude .git | fzf-tmux -p --reverse | xargs nvim" # search quick

# Enable asdf
. /opt/asdf-vm/asdf.sh

# Go development
export GOPATH="${HOME}/go"
export PATH="$PATH:$HOME/go/bin"

# History Size
export HISTFILESIZE=100000       # increase history file size
export HISTSIZE=${HISTFILESIZE}  # increase history size (default is 500)

# https://github.com/jimeh/zsh-peco-history/blob/master/zsh-peco-history.zsh
if (( $+commands[peco] )); then
  if ! (( ${+ZSH_PECO_HISTORY_OPTS} )); then
    ZSH_PECO_HISTORY_OPTS="--layout=bottom-up"
  fi

  function peco_select_history() {
    local parse_cmd

    if (( $+commands[gtac] )); then
      parse_cmd="gtac"
    elif (( $+commands[tac] )); then
      parse_cmd="tac"
    else
      parse_cmd="tail -r" fi
    if [ -n "$ZSH_PECO_HISTORY_DEDUP" ]; then
      if (( $+commands[perl] )); then
        parse_cmd="$parse_cmd | perl -ne 'print unless \$seen{\$_}++'"
      elif (( $+commands[awk] )); then
        parse_cmd="$parse_cmd | awk '!seen[\$0]++'"
      else
        parse_cmd="$parse_cmd | uniq"
      fi
    fi

    BUFFER=$(fc -l -n 1 | eval $parse_cmd | \
               peco ${=ZSH_PECO_HISTORY_OPTS} --query "$LBUFFER")

    CURSOR=$#BUFFER # move cursor
    zle -R -c       # refresh
  }

  zle -N peco_select_history
  bindkey '^R' peco_select_history
fi

eval "$(starship init zsh)"
