neofetch | lolcat

# bindkey -e
bindkey -v

export ZSH="$HOME/.oh-my-zsh"
plugins=(git vi-mode zsh-autosuggestions zsh-syntax-highlighting zsh-z docker)
source $ZSH/oh-my-zsh.sh

export PATH="/usr/local/sbin:$PATH"

# # This loads nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# remove zsh correct
CORRECT_IGNORE_FILE='.*'

# GNU Tools
export PATH="$(brew --prefix)/opt/coreutils/libexec/gnubin:$PATH"
export PATH="$(brew --prefix)/opt/coreutils/libexec/gnubin:$PATH"

# Tfenv
export PATH="$HOME/.tfenv/bin:$PATH"

# Rust/Cargo
export PATH="$PATH:$HOME/.cargo/bin:$PATH"
# Rust/C/Cpp Debugger
export PATH="$PATH:$(brew --prefix)/opt/llvm/bin:$PATH"
export LDFLAGS="-L$(brew --prefix)/opt/llvm/lib"
export CPPFLAGS="-I$(brew --prefix)/opt/llvm/include"

# Go development
export GOPATH="${HOME}/.go"
export GOROOT="$(brew --prefix golang)/libexec"
export PATH="$PATH:${GOPATH}/bin:${GOROOT}/bin"

# enable command auto-correction.
ENABLE_CORRECTION="true"

# gcloud
source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"
source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"

# Alias OSX
alias nvpn='sudo killall openvpn'
alias vpn='sudo openvpn --config $HOME/Documents/vpn/client.ovpn --daemon'
alias update-os='sudo softwareupdate -i -a; brew update; brew upgrade'
alias afk="pmset displaysleepnow"
alias DT='tee ~/Desktop/terminalOut.txt' # pipe content to file on MacOS Desktop
alias f='open -a Finder ./'
alias python='python3.11'
alias header='curl -I'
alias ipe='curl ipinfo.io/ip' # external IP Address
alias ipi='ipconfig getifaddr en0'                 # internal IP Address
alias netCons='lsof -i'                            # show all open TCP/IP sockets
alias ping='ping -c 5'                             # ping 5 times only
alias lsock='sudo /usr/sbin/lsof -i -P'            # display open sockets
alias lsockU='sudo /usr/sbin/lsof -nP | grep UDP'  # display only open UDP sockets
alias lsockT='sudo /usr/sbin/lsof -nP | grep TCP'  # display only open TCP sockets
alias openPorts='sudo lsof -i | grep LISTEN'       # all listening connections
alias showBlocked='sudo ipfw list'                 # all ipfw rules inc/ blocked IPs
alias ipInfo0='ipconfig getpacket en0'             # get info on connections for en0
alias ipInfo1='ipconfig getpacket en1'             # get info on connections for en1
alias flushDNS='dscacheutil -flushcache'           # flush out the DNS Cache

# gcloud
alias vmlist='gcloud compute instances list'
alias ssha='gcloud compute ssh --internal-ip --zone=europe-west3-a'
alias sshb='gcloud compute ssh --internal-ip --zone=europe-west3-b'
alias sshc='gcloud compute ssh --internal-ip --zone=europe-west3-c'

# Docker config
export DOCKER_BUILDKIT=0
export COMPOSE_DOCKER_CLI_BUILD=0

# HSTR configuration - add this to ~/.bashrc
export HSTR_CONFIG=hicolor       # get more colors
# shopt -s histappend              # append new history items to .bash_history
export HISTCONTROL=ignorespace   # leading space hides commands from history
export HISTFILESIZE=100000       # increase history file size (default is 500)
export HISTSIZE=${HISTFILESIZE}  # increase history size (default is 500)
# ensure synchronization between bash memory and history file
export PROMPT_COMMAND="history -a; history -n; ${PROMPT_COMMAND}"
# if this is interactive shell, then bind hstr to Ctrl-r (for Vi mode check doc)
# if [[ $- =~ .*i.* ]]; then bind '"\C-r": "\C-a hstr -- \C-j"'; fi
# if this is interactive shell, then bind 'kill last command' to Ctrl-x k
# if [[ $- =~ .*i.* ]]; then bind '"\C-xk": "\C-a hstr -k \C-j"'; fi
export PATH=$(brew --prefix openvpn)/sbin:$PATH

# Kubernetes Config
export KUBE_EDITOR=nvim
export USE_GKE_GCLOUD_AUTH_PLUGIN=True

# kubectl
source <(kubectl completion zsh)
[[ /usr/local/bin/kubectl ]] && source <(kubectl completion zsh)
complete -F __start_kubectl k

# kubectl new plugin gcp
USE_GKE_GCLOUD_AUTH_PLUGIN=True

### Tools ###
rbrew_upgrade() {
  brew update && brew upgrade
}

rbrew_doctor() {
  brew update && brew upgrade && brew cleanup; brew doctor
}

. /opt/homebrew/opt/asdf/libexec/asdf.sh

source $HOME/Developer/dotfiles/aliases

eval "$(starship init zsh)"
eval "$(atuin init zsh --disable-up-arrow)"
